---
name: 01 Basic Docker Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    
    steps:

      - name: Checkout git repo
        uses: actions/checkout@v4
    
        # Build with Multi-Platform >> simulate various hardware architectures
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
    
        # Build with BuildKit Cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
            
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # add-k8s-test
      - name: Login to ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and Push to GHCR
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/yahsin/docker-ci-automation:${{ github.run_id }}
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: "test-cluster-1"
          args: >-
            --agents 1
            --no-lb
            --k3s-arg "--no-deploy=traefik,servicelb,metrics-server@server:*"
      
      - name: Smoke test deployment in k3d Kubernetes
        run: |
          kubectl create secret docker-registry regcred \
            --docker-server=https://ghcr.io \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.GITHUB_TOKEN }}
          export TESTING_IMAGE=ghcr.io/yahsin/docker-ci-automation:"$GITHUB_RUN_ID"
          envsubst < manifests/deployment.yaml  | kubectl apply -f -
          kubectl rollout status deployment myapp
          kubectl exec deploy/myapp -- curl --fail localhost
      
      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          push: false
          load: true # Export to Docker Engine rather than pushing to a registry
          tags: ${{ github.run_id }}
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

        # for more advanced tests, use docker compose with `depends_on`
          # NOTE: GHA and other CIs can also run dependency containers on their own
          # GHA `services:` can do this if you're trying to avoid docker compose
      - name: Test healthcheck in Docker Compose
        run: |
          export TESTING_IMAGE="${{ github.run_id }}"
          docker compose -f docker-compose.test.yml up --exit-code-from sut
      
      # Build with Metadata
      - name: Docker meta for Final Image Build
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: yahsin/docker-ci-automation,ghcr.io/yahsin/docker-ci-automation
          flavor: |
            latest=false
          tags: |
            type=raw,value=10
      
      - name: Docker build and Push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64,linux/arm/v7
